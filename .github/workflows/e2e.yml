name: e2e example
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn build

      - name: Run appium server
        run: mkdir -p logs && yarn e2e:appium > logs/appium.log &

      #- name: Set up Java
      #  uses: actions/setup-java@v2
      #  with:
      #    java-version: "15"

      # ref: https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/android?view=azure-devops#test-on-the-android-emulator
      - name: Run Android Emulator
        run: |
          # Install AVD files
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-30;google_apis;x86'

          # Create emulator
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n xamarin_android_emulator -k 'system-images;android-30;google_apis;x86' --force

          $ANDROID_HOME/emulator/emulator -list-avds

          echo "Starting emulator"

          # Start emulator in background
          nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator -no-snapshot > /dev/null 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'

          $ANDROID_HOME/platform-tools/adb devices

          echo "Emulator started"

      - name: Build archives for Emulators
        run: yarn e2e:prepare > logs/build.log
        continue-on-error: true

      - name: Upload logs
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: logs
      - name: Upload screenshots
        uses: actions/upload-artifact@v1
        with:
          name: screenshots
          path: packages/example/protractor/screenshots
